#
# DCMotorServer: EPICS database for DCMotorServer Arduino code
#
# ===== ============================
# macro meaning
# ===== ============================
# P     prefix for this database
# PORT  asyn port to be used
# ===== ============================

record(stringin, "$(P)id") {
    field(DESC, "device identification")
    field(DTYP, "stream")
    field(INP,  "@DCMotorServer.proto id $(PORT)")
    field(PINI, "1")
}

record(stringin, "$(P)version") {
    field(DESC, "firmware version")
    field(DTYP, "stream")
    field(INP,  "@DCMotorServer.proto version $(PORT)")
    field(PINI, "1")
}

record(stringout, "$(P)cmd") {
    field(DESC, "command interface")
    field(DTYP, "stream")
    field(OUT,  "@DCMotorServer.proto debug $(PORT)")
}

record(ao, "$(P)m1") {
    field(DESC, "motor 1 timed move")
    field(EGU,  "s")
    field(PREC, "2")
    field(DTYP, "stream")
    field(OUT,  "@DCMotorServer.proto dcm_move(1) $(PORT)")
    field(AOFF, "0")
    field(ASLO, "0.001")  # ms units
}

record(ao, "$(P)m2") {
    field(DESC, "motor 2 timed move")
    field(EGU,  "s")
    field(PREC, "2")
    field(DTYP, "stream")
    field(OUT,  "@DCMotorServer.proto dcm_move(2) $(PORT)")
    field(AOFF, "0")
    field(ASLO, "0.001")  # ms units
}

record(ao, "$(P)m3") {
    field(DESC, "motor 3 timed move")
    field(EGU,  "s")
    field(PREC, "2")
    field(DTYP, "stream")
    field(OUT,  "@DCMotorServer.proto dcm_move(3) $(PORT)")
    field(AOFF, "0")
    field(ASLO, "0.001")  # ms units
}

record(ao, "$(P)m4") {
    field(DESC, "motor 4 timed move")
    field(EGU,  "s")
    field(PREC, "2")
    field(DTYP, "stream")
    field(OUT,  "@DCMotorServer.proto dcm_move(4) $(PORT)")
    field(AOFF, "0")
    field(ASLO, "0.001")  # ms units
}

record(ai, "$(P)ai0") {
    field(DESC, "V_photocell, raw")
    field(EGU,  "VDC")
    field(PREC, "3")
    field(DTYP, "stream")
    field(INP,  "@DCMotorServer.proto ai(0) $(PORT)")
    field(SCAN, ".5 second")
    field(AOFF, "0")
    field(ASLO, "0.004887585532746823069403714565")  # 5 VDC / 1023 ADC units
    field(HOPR, "5")
    field(LOPR, "0")
}

record(ai, "$(P)ai0:mean") {
    field(DESC, "V_photocell")
    field(EGU,  "VDC")
    field(PREC, "5")
    field(DTYP, "stream")
    field(INP,  "@DCMotorServer.proto ai_mean(0) $(PORT)")
    field(SCAN, ".5 second")
    field(AOFF, "0")
    field(ASLO, "0.000004887585532746823069403714565")  # 5 VDC / 1023 ADC units / 1000 multiplier
    field(HOPR, "5")
    field(LOPR, "0")
}

record(ai, "$(P)ai1") {
    field(DESC, "V_LED, raw")
    field(EGU,  "VDC")
    field(PREC, "3")
    field(DTYP, "stream")
    field(INP,  "@DCMotorServer.proto ai(1) $(PORT)")
    field(SCAN, ".5 second")
    field(AOFF, "0")
    field(ASLO, "0.004887585532746823069403714565")  # 5 VDC / 1023 ADC units
    field(HOPR, "5")
    field(LOPR, "0")
}

record(ai, "$(P)ai1:mean") {
    field(DESC, "V_LED")
    field(EGU,  "VDC")
    field(PREC, "5")
    field(DTYP, "stream")
    field(INP,  "@DCMotorServer.proto ai_mean(1) $(PORT)")
    field(SCAN, ".5 second")
    field(AOFF, "0")
    field(ASLO, "0.000004887585532746823069403714565")  # 5 VDC / 1023 ADC units / 1000 multiplier
    field(HOPR, "5")
    field(LOPR, "0")
}

record(ai, "$(P)ai2") {
    field(DESC, "V_thermistor, raw")
    field(EGU,  "VDC")
    field(PREC, "3")
    field(DTYP, "stream")
    field(INP,  "@DCMotorServer.proto ai(2) $(PORT)")
    field(SCAN, ".5 second")
    field(AOFF, "0")
    field(ASLO, "0.004887585532746823069403714565")  # 5 VDC / 1023 ADC units
    field(HOPR, "5")
    field(LOPR, "0")
}

record(ai, "$(P)ai2:mean") {
    field(DESC, "V_thermistor")
    field(EGU,  "VDC")
    field(PREC, "5")
    field(DTYP, "stream")
    field(INP,  "@DCMotorServer.proto ai_mean(2) $(PORT)")
    field(SCAN, ".5 second")
    field(AOFF, "0")
    field(ASLO, "0.000004887585532746823069403714565")  # 5 VDC / 1023 ADC units / 1000 multiplier
    field(HOPR, "5")
    field(LOPR, "0")
}

record(ai, "$(P)ai3:mean") {
    field(DESC, "V_ref for thermistor")
    field(EGU,  "VDC")
    field(PREC, "5")
    field(DTYP, "stream")
    field(INP,  "@DCMotorServer.proto ai_mean(3) $(PORT)")
    field(SCAN, ".5 second")
    field(AOFF, "0")
    field(ASLO, "0.000004887585532746823069403714565")  # 5 VDC / 1023 ADC units / 1000 multiplier
    field(HOPR, "5")
    field(LOPR, "0")
}

# record(ao, "$(P)pwm6") {
#     field(DESC, "PWM output 6")
#     field(EGU,  "VDC")
#     field(PREC, "2")
#     field(DTYP, "stream")
#     field(OUT,  "@DCMotorServer.proto pwm(6) $(PORT)")
#     field(AOFF, "0")
#     field(ASLO, "0.01960784313725490196078431372549")  # 5 VDC / 255 ADC units
#     field(HOPR, "5")
#     field(LOPR, "0")
#     field(DRVH, "5")
#     field(DRVL, "0")
# }

record(ao, "$(P)pwm11") {
    field(DESC, "LED")
    field(EGU,  "VDC")
    field(PREC, "2")
    field(DTYP, "stream")
    field(OUT,  "@DCMotorServer.proto pwm(11) $(PORT)")
    field(AOFF, "0")
    field(ASLO, "0.01960784313725490196078431372549")  # 5 VDC / 255 ADC units
    field(HOPR, "5")
    field(LOPR, "0")
    field(DRVH, "5")
    field(DRVL, "0")
}

record(ai, "$(P)rate") {
    field(DESC, "update rate")
    field(EGU,  "1/s")
    field(DTYP, "stream")
    field(INP,  "@DCMotorServer.proto rate $(PORT)")
    field(SCAN, ".5 second")
}

record(ao, "$(P)period") {
    field(DESC, "averaging period")
    field(VAL,  "0.5")
    field(PREC, "2")
    field(PINI, "1")
    field(EGU,  "s")
    field(DTYP, "stream")
    field(OUT,  "@DCMotorServer.proto period $(PORT)")
    field(AOFF, "0")
    field(ASLO, "0.001")  # raw units are milliseconds
    field(HOPR, "1000.000")
    field(LOPR, "0.005")
    field(DRVH, "1000.000")
    field(DRVL, "0.005")
}

record(epid, "$(P)epid") {
  field(DESC, "Feedback control")
  field(DTYP, "Soft Channel")

  field(SMSL, "supervisory")
  # with SMSL=supervisory, setpoint is .VAL
  field(INP, "$(P)ai0:mean")

  # with SMSL=closed_loop, setpoint comes via .STPL
  #field(SMSL, "closed_loop")
  #field(STPL, "$(P)setpoint")
  
  field(OUTL, "$(P)pwm11 PP NMS")

  field(FBON, "0")

  field(KP, "0.1")
  field(KI, "5")
  field(KD, "0")
  field(SCAN, ".5 second")

  field(DRVL, "0")
  field(DRVH, "5")
  field(PREC, "4")
}


#  simple monitoring program:
#  setenv P ino:
#  export P=ino:
#  pvview ${P}cr:{pwm11,ai{0,1,2}:mean,{rate,period},cmd}{.DESC,} &
